<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sort By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Tests&quot;'>
        <calculation class='tableau' formula='&quot;Total Tests&quot;' />
        <members>
          <member value='&quot;Total Tests&quot;' />
          <member value='&quot;Total No Tests&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.0ayol351te15fe179y1pj0lgv20a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0sugt3e1wqpsic1f6ebro0bd9l3f'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0sugt3e1wqpsic1f6ebro0bd9l3f' name='data.csv' table='[C:\Users\ASUS\Desktop\Lab02_DataVisualizationWithTableau\output\data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0sugt3e1wqpsic1f6ebro0bd9l3f' name='data.csv' table='[C:\Users\ASUS\Desktop\Lab02_DataVisualizationWithTableau\output\data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[1 Caseevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Deathevery X ppl]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1 Testevery X ppl]' role='measure' type='quantitative' />
      <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Total No Tests' datatype='integer' name='[Calculation_925771236849958920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Population] - [TotalTests] &gt; 0 THEN [Population] - [TotalTests]&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='For Sorting' datatype='integer' name='[Calculation_925771236864163852]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Total Tests&quot; THEN [TotalTests]&#13;&#10;    WHEN &quot;Total No Tests&quot; THEN [Calculation_925771236849958920]&#13;&#10;END' />
      </column>
      <column caption='Total Sum' datatype='integer' name='[Calculation_925771236934234138]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalCases] + [TotalDeaths] + [TotalRecovered]' />
      </column>
      <column caption='Proportion Cases' datatype='real' name='[Calculation_925771236934365211]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalCases] * 100 / [Calculation_925771236934234138]' />
      </column>
      <column caption='Proportion Recovered' datatype='real' name='[Calculation_925771236934475804]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalRecovered] * 100 / [Calculation_925771236934234138]' />
      </column>
      <column caption='Proportion Deaths' datatype='real' name='[Calculation_925771236934541341]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TotalDeaths] * 100 / [Calculation_925771236934234138]' />
      </column>
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Cases/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tests/1M pop]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_25E29FCF96514B17A3A5BA0A80AC7A77]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_25E29FCF96514B17A3A5BA0A80AC7A77:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[cum:sum:TotalCases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[cum:sum:TotalDeaths:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[cum:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0ayol351te15fe179y1pj0lgv20a].[Country,Other]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0ayol351te15fe179y1pj0lgv20a].[Country,Other]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0ayol351te15fe179y1pj0lgv20a].[Country,Other]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[1 Caseevery X ppl]' derivation='Sum' name='[sum:1 Caseevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Deathevery X ppl]' derivation='Sum' name='[sum:1 Deathevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1 Testevery X ppl]' derivation='Sum' name='[sum:1 Testevery X ppl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925771236849958920]' derivation='Sum' name='[sum:Calculation_925771236849958920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925771236864163852]' derivation='Sum' name='[sum:Calculation_925771236864163852:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925771236934365211]' derivation='Sum' name='[sum:Calculation_925771236934365211:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925771236934475804]' derivation='Sum' name='[sum:Calculation_925771236934475804:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_925771236934541341]' derivation='Sum' name='[sum:Calculation_925771236934541341:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases/1M pop]' derivation='Sum' name='[sum:New Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[cum:sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalCases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalCases:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalCases:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:1 Caseevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934365211:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalTests:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Active Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236861526027:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[usr:Calculation_925771236914376728:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:NewRecovered:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:New Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[__tableau_internal_object_id__].[cnt:data.csv_25E29FCF96514B17A3A5BA0A80AC7A77:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236877365267:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:1 Deathevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236877152274:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Tot Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Serious,Critical:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[cum:sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalRecovered:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalRecovered:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalRecovered:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934541341:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236864163852:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[cum:sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalDeaths:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalDeaths:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalDeaths:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[pcto:sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:1 Testevery X ppl:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236849561606:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236849958920:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934475804:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Tests/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:New Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236877463572:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sort By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Tests&quot;'>
          <calculation class='tableau' formula='&quot;Total Tests&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_25E29FCF96514B17A3A5BA0A80AC7A77'>
            <properties context=''>
              <relation connection='textscan.0sugt3e1wqpsic1f6ebro0bd9l3f' name='data.csv' table='[C:\Users\ASUS\Desktop\Lab02_DataVisualizationWithTableau\output\data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='datas' inline='true' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datas' name='textscan.0h49rel15hocxu17ozzen17mdj51'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='datas.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0h49rel15hocxu17ozzen17mdj51' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0h49rel15hocxu17ozzen17mdj51' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Datetime]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Datetime</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[New Cases/1M pop]' role='measure' type='quantitative' />
      <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tests/1M pop]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datas.csv' datatype='table' name='[__tableau_internal_object_id__].[datas.csv_97ED820F98084365B3DA0CFAFE87EDA7]' role='measure' type='quantitative' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases/1M pop]' derivation='Sum' name='[sum:New Cases/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:New Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:Active Cases/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:New Deaths/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:Tests/1M pop:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewRecovered:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='datas.csv' id='datas.csv_97ED820F98084365B3DA0CFAFE87EDA7'>
            <properties context=''>
              <relation connection='textscan.0h49rel15hocxu17ozzen17mdj51' name='datas.csv' table='[datas#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                  <column datatype='date' name='Datetime' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data (2)' inline='true' name='federated.0ayol351te15fe179y1pj0lgv20a (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0she7d002wdwhi11gi4lw03i5p0f'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_A7CBA62B82034736AEA4732A98463578]' role='measure' type='quantitative' />
      <column-instance column='[Country,Other]' derivation='Attribute' name='[attr:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='Max' name='[max:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country,Other:nk]' palette='orange_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#aa4322'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b24723'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b64a23'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#c35022'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c75222'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ca5522'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ce5722'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#db5e20'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#df6120'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e56720'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ee7523'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f07a26'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f17f28'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f2832b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f2862d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f3882e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f49133'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f59637'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f59b3b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f59f3f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f5a443'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f5a848'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f6ac50'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b058'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fbbb6f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country,Other:nk]' palette='brown_10_0' type='palette'>
            <map to='#2d5a87'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9f3632'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a23932'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a63d32'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a94032'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ab4232'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ad4433'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ae4533'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b04833'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b04934'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b24d34'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b34d34'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b55135'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b85536'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ba5a38'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bc5f3b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#be633d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#c06840'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#c06840'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#c26c43'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#c37046'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#c47146'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#c5754a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#c7784c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#c8794c'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ca7e4e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#cd8250'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf8652'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#cf8753'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d28a54'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d58e54'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d79155'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d89255'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d9313f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#da9655'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#dd9a58'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#df9e5c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e1a260'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e1a260'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e3a663'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e3a663'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e4a967'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#e4ab68'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#e5ad6c'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e6af6e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e7b373'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e8b878'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e9bc7f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e9bc80'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#eac086'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#eac086'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ebc48c'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ebc58e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ebc892'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ebc995'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#eccd9f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#eccfa3'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ecd2a9'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#edd6b3'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#edd7b4'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f15f4e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country,Other:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ab4322'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b34823'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b74a23'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b84a23'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bc4d23'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#c45122'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c95422'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d15821'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d85d21'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#da5d20'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e56620'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ee7623'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f07b26'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f07d27'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f18028'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f59839'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f59d3d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f5a241'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f5a342'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f5a746'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f6ab4d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f7ae55'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f8b25d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f9b666'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_A7CBA62B82034736AEA4732A98463578'>
            <properties context=''>
              <relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data (3)' inline='true' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0she7d002wdwhi11gi4lw03i5p0f (copy)'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f (copy)' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f (copy)' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A7CBA62B82034736AEA4732A98463578]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_A7CBA62B82034736AEA4732A98463578]' role='measure' type='quantitative' />
      <column-instance column='[Country,Other]' derivation='Attribute' name='[attr:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='Max' name='[max:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country,Other:nk]' palette='orange_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#aa4322'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b24723'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b64a23'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#c35022'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c75222'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ca5522'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ce5722'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#db5e20'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#df6120'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e56720'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ee7523'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f07a26'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f17f28'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f2832b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f2862d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f3882e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f49133'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f59637'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f59b3b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f59f3f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f5a443'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f5a848'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f6ac50'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b058'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fbbb6f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country,Other:nk]' palette='brown_10_0' type='palette'>
            <map to='#2d5a87'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9f3632'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a23932'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a63d32'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a94032'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ab4232'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ad4433'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ae4533'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b04833'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b04934'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b24d34'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b34d34'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b55135'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b85536'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ba5a38'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bc5f3b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#be633d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#c06840'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#c06840'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#c26c43'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#c37046'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#c47146'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#c5754a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#c7784c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#c8794c'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ca7e4e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#cd8250'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#cf8652'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#cf8753'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d28a54'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d58e54'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d79155'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d89255'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d9313f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#da9655'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#dd9a58'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#df9e5c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e1a260'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e1a260'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e3a663'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e3a663'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e4a967'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#e4ab68'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#e5ad6c'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e6af6e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e7b373'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e8b878'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e9bc7f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e9bc80'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#eac086'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#eac086'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ebc48c'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ebc58e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ebc892'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ebc995'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#eccd9f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#eccfa3'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ecd2a9'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#edd6b3'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#edd7b4'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f15f4e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country,Other:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ab4322'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b34823'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b74a23'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b84a23'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bc4d23'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#c45122'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c95422'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d15821'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d85d21'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#da5d20'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e56620'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ee7623'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f07b26'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f07d27'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f18028'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f59839'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f59d3d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f5a241'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f5a342'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f5a746'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f6ab4d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f7ae55'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f8b25d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f9b666'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_A7CBA62B82034736AEA4732A98463578'>
            <properties context=''>
              <relation connection='textscan.0she7d002wdwhi11gi4lw03i5p0f (copy)' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='datas (2)' inline='true' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datas' name='textscan.1nby1sa0jdp5jn1fhcmft1luuhhs'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='datas.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nby1sa0jdp5jn1fhcmft1luuhhs' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1nby1sa0jdp5jn1fhcmft1luuhhs' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Datetime]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Datetime</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datas.csv' datatype='table' name='[__tableau_internal_object_id__].[datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{f7425db9-03a1-4e89-94ef-19fe18469763}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:TotalDeaths:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='datas.csv' id='datas.csv_025D052CD7FD43CDB68337C7ADDBCBF2'>
            <properties context=''>
              <relation connection='textscan.1nby1sa0jdp5jn1fhcmft1luuhhs' name='datas.csv' table='[datas#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                  <column datatype='date' name='Datetime' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='data (4)' inline='true' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0vjh6co196km8w14bpv811ivnabd'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0vjh6co196km8w14bpv811ivnabd' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0vjh6co196km8w14bpv811ivnabd' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_601D0952CF824B0F9258F2046F090259]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_601D0952CF824B0F9258F2046F090259]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_601D0952CF824B0F9258F2046F090259'>
            <properties context=''>
              <relation connection='textscan.0vjh6co196km8w14bpv811ivnabd' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='datas (3)' inline='true' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datas' name='textscan.1ltmgs913dv34v16ke6kc1yxew7t'>
            <connection class='textscan' directory='C:/Users/ASUS/Desktop/Lab02_DataVisualizationWithTableau/output' filename='datas.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ltmgs913dv34v16ke6kc1yxew7t' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ltmgs913dv34v16ke6kc1yxew7t' name='datas.csv' table='[datas#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country,Other' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='Serious,Critical' ordinal='8' />
            <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
            <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
            <column datatype='integer' name='TotalTests' ordinal='11' />
            <column datatype='integer' name='Tests/1M pop' ordinal='12' />
            <column datatype='integer' name='Population' ordinal='13' />
            <column datatype='string' name='Continent' ordinal='14' />
            <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
            <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
            <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
            <column datatype='real' name='New Cases/1M pop' ordinal='18' />
            <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
            <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
            <column datatype='date' name='Datetime' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tot Cases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tot Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tot Cases/1M pop</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Caseevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Caseevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Caseevery X ppl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Deathevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Deathevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Deathevery X ppl</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 Testevery X ppl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 Testevery X ppl]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>1 Testevery X ppl</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Cases/1M pop</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>New Deaths/1M pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Cases/1M pop]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Active Cases/1M pop</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datetime</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Datetime]</local-name>
            <parent-name>[datas.csv]</parent-name>
            <remote-alias>Datetime</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datas.csv' datatype='table' name='[__tableau_internal_object_id__].[datas.csv_0778A12A90E640BBA6C90AE60DD0341E]' role='measure' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='datas.csv' id='datas.csv_0778A12A90E640BBA6C90AE60DD0341E'>
            <properties context=''>
              <relation connection='textscan.1ltmgs913dv34v16ke6kc1yxew7t' name='datas.csv' table='[datas#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country,Other' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='Serious,Critical' ordinal='8' />
                  <column datatype='integer' name='Tot Cases/1M pop' ordinal='9' />
                  <column datatype='integer' name='Deaths/1M pop' ordinal='10' />
                  <column datatype='integer' name='TotalTests' ordinal='11' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='12' />
                  <column datatype='integer' name='Population' ordinal='13' />
                  <column datatype='string' name='Continent' ordinal='14' />
                  <column datatype='integer' name='1 Caseevery X ppl' ordinal='15' />
                  <column datatype='integer' name='1 Deathevery X ppl' ordinal='16' />
                  <column datatype='integer' name='1 Testevery X ppl' ordinal='17' />
                  <column datatype='real' name='New Cases/1M pop' ordinal='18' />
                  <column datatype='real' name='New Deaths/1M pop' ordinal='19' />
                  <column datatype='real' name='Active Cases/1M pop' ordinal='20' />
                  <column datatype='date' name='Datetime' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_F4FA061E56C7407DB3B467ADB9D291C9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Câu 18' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Forecast Indicator' />
        <param name='target' value='Câu 18' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2_07F3DA8B26224AA5AC7D81E07C400B67]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Câu 7' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent' />
        <param name='target' value='Câu 7' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Câu 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tổng số ca  nhiễm theo từng quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (2)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' included-values='in-range'>
            <min>2000000</min>
            <max>82747175</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:Country,Other:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:Country,Other:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1.4722652435302734' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{91EEFD3E-C980-4940-9FF5-E2622D6DCCB6}' />
    </worksheet>
    <worksheet name='Câu 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Mức độ lây nhiễm của các ca nhiễm trên toàn thế giới</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ayol351te15fe179y1pj0lgv20a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Longitude (generated)]' field-type='quantitative' max='-42283794.212330736' min='-117046551.35418315' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Latitude (generated)]' field-type='quantitative' max='22405369.937996373' min='-13936896.780366817' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Tot Cases/1M pop:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' />
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Tot Cases/1M pop:qk]' />
              <geometry column='[federated.0ayol351te15fe179y1pj0lgv20a].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a].[Latitude (generated)]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{27D82DBF-CA9D-4E44-9239-616AED8632B7}' />
    </worksheet>
    <worksheet name='Câu 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Mức độ tử vong của các ca nhiễm trên toàn thế giới</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ayol351te15fe179y1pj0lgv20a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Longitude (generated)]' field-type='quantitative' max='-42283794.212330736' min='-117046551.35418315' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Latitude (generated)]' field-type='quantitative' max='22405369.937996373' min='-13936896.780366817' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Deaths/1M pop:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' />
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Deaths/1M pop:qk]' />
              <geometry column='[federated.0ayol351te15fe179y1pj0lgv20a].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a].[Latitude (generated)]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2EA615F5-F09B-43FC-8A66-ED325F54D820}' />
    </worksheet>
    <worksheet name='Câu 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tỉ lệ số lượng ca nhiễm và số lượng ca test theo từng quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column caption='SUM([Total Cases])/SUM([Total Tests])' datatype='real' name='[Calculation_559290817282220032]' role='measure' type='quantitative' user:unnamed='Sheet 8'>
              <calculation class='tableau' formula='SUM([TotalCases])/SUM([TotalTests])' />
            </column>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalTests]' derivation='None' name='[none:TotalTests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_559290817282220032]' derivation='User' name='[usr:Calculation_559290817282220032:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[usr:Calculation_559290817282220032:qk]' />
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalCases:qk]' included-values='in-range'>
            <min>10000</min>
            <max>82747175</max>
          </filter>
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalTests:qk]' included-values='in-range'>
            <min>10000</min>
            <max>1001729381</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalCases:qk]</column>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalTests:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[usr:Calculation_559290817282220032:qk]' field-type='quantitative' max='2.2798022857530822' min='0.1257359129132482' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[usr:Calculation_559290817282220032:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{CE75775B-FE9F-4BED-87C4-8D084C1392B9}' />
    </worksheet>
    <worksheet name='Câu 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>TotalDeaths/TotalCases - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column caption='SUM([Total Deaths])/SUM([Total Cases])' datatype='real' name='[Calculation_698620929707851776]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='SUM([TotalDeaths])/SUM([TotalCases])' />
            </column>
            <column caption='SUM([Total Deaths])/SUM([Total Cases])' datatype='real' name='[Calculation_698620929708941314]' role='measure' type='quantitative' user:unnamed='TotalDeaths/TotalCases_Continent'>
              <calculation class='tableau' formula='SUM([TotalDeaths])/SUM([TotalCases])' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_698620929707851776]' derivation='User' name='[usr:Calculation_698620929707851776:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_698620929708941314]' derivation='User' name='[usr:Calculation_698620929708941314:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[usr:Calculation_698620929707851776:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[usr:Calculation_698620929708941314:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[usr:Calculation_698620929707851776:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{26855E43-3876-4682-97BC-EB7493C17240}' />
    </worksheet>
    <worksheet name='Câu 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='datas (2)' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{f7425db9-03a1-4e89-94ef-19fe18469763}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>4</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]'>
            <groupfilter function='level-members' level='[none:AdhocCluster:4:ok]' />
          </filter>
          <computed-sort column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]' direction='DESC' using='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:TotalDeaths:qk]' />
          <slices>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:TotalDeaths:qk]' />
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]' />
              <text column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]' />
              <text column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:TotalDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F4532505-D562-4D68-A489-99D9DB529634}' />
    </worksheet>
    <worksheet name='Câu 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>So sánh giữa số người đã test và chưa test COVID-19 của một vài quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ayol351te15fe179y1pj0lgv20a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sort By' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Tests&quot;'>
              <calculation class='tableau' formula='&quot;Total Tests&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a'>
            <column caption='Total No Tests' datatype='integer' name='[Calculation_925771236849958920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Population] - [TotalTests] &gt; 0 THEN [Population] - [TotalTests]&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='For Sorting' datatype='integer' name='[Calculation_925771236864163852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &quot;Total Tests&quot; THEN [TotalTests]&#13;&#10;    WHEN &quot;Total No Tests&quot; THEN [Calculation_925771236849958920]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_925771236849958920]' derivation='Sum' name='[sum:Calculation_925771236849958920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925771236864163852]' derivation='Sum' name='[sum:Calculation_925771236864163852:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalTests:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236849958920:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalTests:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236849958920:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236861526027:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;S. Korea&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' direction='ASC' using='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236864163852:qk]' />
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</column>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Multiple Values]' scope='rows' value='Population' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' value='false' />
            <format attr='text-orientation' field='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' value='-90' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a].[Multiple Values]</rows>
        <cols>([federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk] / [federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6E4EA3D4-273A-4129-9B02-EC19FA2A9BAC}' />
    </worksheet>
    <worksheet name='Câu 16'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Tương quan giữa số ca nhiễm mới mỗi ngày và số ca hồi phục mới mỗi ngày trên toàn thế giới trong 20 ngày qua</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi'>
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewRecovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[Multiple Values]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{95E2EDEF-729C-4941-8469-D0B1D00CA3A2}' />
    </worksheet>
    <worksheet name='Câu 17'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas (3)' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)'>
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewCases:qk]' scope='rows' value='People' />
            <encoding attr='space' class='0' field='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewDeaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewCases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewDeaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewCases:qk] + [federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[sum:NewDeaths:qk])</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{8B27AA4B-9248-488E-837F-9948E5D20E70}' />
    </worksheet>
    <worksheet name='Câu 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='datas (2)' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)'>
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column-instance column='[NewCases]' derivation='Sum' forecast-column-base='[sum:NewCases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Forecast Indicator:nk]' />
              <text column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[fVal:sum:NewCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[fVal:sum:NewCases:qk]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[tdy:Datetime:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DE0E5203-06CA-4008-9BDF-23F40F5F71F3}' />
    </worksheet>
    <worksheet name='Câu 19'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Mối quan hệ giữa số tử vong mới mỗi ngày và số ca tử vong mới trên 1 triệu dân số mỗi ngày trên toàn thế giới trong 20 ngày qua</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi'>
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Deaths/1M pop]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[New Deaths/1M pop]' derivation='Sum' name='[sum:New Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewDeaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:New Deaths/1M pop:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewDeaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:New Deaths/1M pop:qk] + [federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:NewDeaths:qk])</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{BA4173F0-382A-41CD-9D2B-42F0E202A528}' />
    </worksheet>
    <worksheet name='Câu 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tổng số ca chết theo từng quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='None' name='[none:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' />
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' included-values='in-range'>
            <min>22200</min>
            <max>1018718</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{40A8BCC0-03CD-4CA9-8D25-53264FE06375}' />
    </worksheet>
    <worksheet name='Câu 20'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>TotalCase - TotalRecovered</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalRecovered:qk]' field-type='quantitative' max='47914483' min='-1683399' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalCases:qk]' field-type='quantitative' max='48506224' min='-2814946' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' />
              <lod column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalRecovered:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalCases:qk]</cols>
      </table>
      <simple-id uuid='{D2FD4FC6-7D7A-4D31-B489-0523599F5EA1}' />
    </worksheet>
    <worksheet name='Câu 21'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Population - TotalCases - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' />
              <lod column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalCases:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:Population:qk]</cols>
      </table>
      <simple-id uuid='{66428B91-9A6A-4139-B333-43A903EDA9F3}' />
    </worksheet>
    <worksheet name='Câu 22'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Population - TotalDeaths - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:Population:qk]' field-type='quantitative' max='1672712299' min='-113559621' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' field-type='quantitative' max='1171830' min='-100912' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' />
              <lod column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:Population:qk]</cols>
      </table>
      <simple-id uuid='{D7DE5BFC-D312-4B4D-BE8E-B55EB7DC6EA3}' />
    </worksheet>
    <worksheet name='Câu 23'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sự biến đổi của các ca nhiễm mới trên 1 triệu dân số mỗi ngày của một vài quốc gia trong 20 ngày qua</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column datatype='real' name='[New Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases/1M pop]' derivation='Sum' name='[sum:New Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:New Cases/1M pop:qk]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{477BC3BA-D457-4954-A06C-B97B4C5306C6}' />
    </worksheet>
    <worksheet name='Câu 24'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Thể hiện tổng số ca đang thực sự nhiễm trên 1 triệu dân số mỗi ngày của từng châu lục trong 20 ngày qua</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi'>
            <column datatype='real' name='[Active Cases/1M pop]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Cases/1M pop]' derivation='Sum' name='[sum:Active Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[sum:Active Cases/1M pop:qk]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{23A116F5-C044-4C8A-9FE4-0DE8B661469A}' />
    </worksheet>
    <worksheet name='Câu 25'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Số ca tử vong mới của từng khu vực theo ngày</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datas (2)' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]</column>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]' />
              <text column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:NewDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:NewDeaths:qk]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[tdy:Datetime:qk]</cols>
      </table>
      <simple-id uuid='{C5767817-C5F9-4B4C-8FCF-409B1E40C5BA}' />
    </worksheet>
    <worksheet name='Câu 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='datas (2)' name='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Datetime]' role='dimension' type='ordinal' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Datetime]' derivation='Day-Trunc' name='[tdy:Datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:NewRecovered:qk]</rows>
        <cols>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[tdy:Datetime:ok]</cols>
      </table>
      <simple-id uuid='{0B3CC92A-C563-4226-AB36-16ADD1119884}' />
    </worksheet>
    <worksheet name='Câu 27'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>So sánh tỉ lệ giữa số ca nhiễm, hồi phục và chết của một vài quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ayol351te15fe179y1pj0lgv20a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a'>
            <column caption='Total Sum' datatype='integer' name='[Calculation_925771236934234138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalCases] + [TotalDeaths] + [TotalRecovered]' />
            </column>
            <column caption='Proportion Cases' datatype='real' name='[Calculation_925771236934365211]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalCases] * 100 / [Calculation_925771236934234138]' />
            </column>
            <column caption='Proportion Recovered' datatype='real' name='[Calculation_925771236934475804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalRecovered] * 100 / [Calculation_925771236934234138]' />
            </column>
            <column caption='Proportion Deaths' datatype='real' name='[Calculation_925771236934541341]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TotalDeaths] * 100 / [Calculation_925771236934234138]' />
            </column>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[cum:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_925771236934365211]' derivation='Sum' name='[sum:Calculation_925771236934365211:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925771236934475804]' derivation='Sum' name='[sum:Calculation_925771236934475804:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_925771236934541341]' derivation='Sum' name='[sum:Calculation_925771236934541341:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934365211:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934475804:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934541341:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934365211:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Calculation_925771236934475804:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[cum:sum:TotalRecovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;S. Korea&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</column>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ayol351te15fe179y1pj0lgv20a].[Multiple Values]' scope='rows' value='Proportion' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a].[Multiple Values]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{D8A1DF5E-7397-4352-896B-1FF715EC383E}' />
    </worksheet>
    <worksheet name='Câu 28'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>So sánh giữa số ca nhiễm, hồi phục và chết của một vài quốc gia theo góc độ của các quốc gia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0ayol351te15fe179y1pj0lgv20a' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalDeaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:Country,Other:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</column>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a].[Multiple Values]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A7BDDDEE-DF55-4E05-B1A3-77FC557039FD}' />
    </worksheet>
    <worksheet name='Câu 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tổng số ca hồi phục</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalRecovered]' derivation='None' name='[none:TotalRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;USA&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;UK&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]' included-values='in-range'>
            <min>2500000</min>
            <max>80506860</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalRecovered:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalRecovered:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{06B84858-7A7B-411B-8A92-B4C0A90617D3}' />
    </worksheet>
    <worksheet name='Câu 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Số lượng ca nhiễm trên một triệu dân số
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Tot Cases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tot Cases/1M pop]' derivation='None' name='[none:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tot Cases/1M pop]' derivation='Sum' name='[sum:Tot Cases/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]' />
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tot Cases/1M pop:qk]' included-values='in-range'>
            <min>317000</min>
            <max>704431</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tot Cases/1M pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{EDF9CA37-EC13-43B2-A02B-0996796DB924}' />
    </worksheet>
    <worksheet name='Câu 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Số lượng ca chết của từng quốc gia trên một triệu dân số</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop]' derivation='None' name='[none:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths/1M pop]' derivation='Sum' name='[sum:Deaths/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]' />
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Deaths/1M pop:qk]' included-values='in-range'>
            <min>2200</min>
            <max>6294</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Deaths/1M pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{11EB39B4-C4CB-438C-8406-4EF58ED99D24}' />
    </worksheet>
    <worksheet name='Câu 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Số ca đã test trên một triệu dân số</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (3)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 2)'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tests/1M pop]' derivation='None' name='[none:Tests/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tests/1M pop]' derivation='Sum' name='[sum:Tests/1M pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]' direction='DESC' using='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]' />
          <filter class='quantitative' column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tests/1M pop:qk]' included-values='in-range'>
            <min>2900000</min>
            <max>21814223</max>
          </filter>
          <slices>
            <column>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tests/1M pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]</rows>
        <cols>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</cols>
      </table>
      <simple-id uuid='{2071897D-F669-444E-AD68-D00EB7DC4B06}' />
    </worksheet>
    <worksheet name='Câu 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>TotalCase - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' />
              <size column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalCases:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[pcto:sum:TotalCases:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{068E3006-DA83-485B-A282-4F1B75BC9F7E}' />
    </worksheet>
    <worksheet name='Câu 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>TotalDeaths - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[pcto:sum:TotalDeaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' />
              <size column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[pcto:sum:TotalDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5B72CEB9-BEC1-4ABC-878C-48BA697E9C24}' />
    </worksheet>
    <worksheet name='Câu 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>TotalRecovered - Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data (4)' name='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayol351te15fe179y1pj0lgv20a (copy 3)'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[pcto:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' />
              <size column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalRecovered:qk]' />
              <text column='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[pcto:sum:TotalRecovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{67BD742E-E574-49ED-949B-E394A48A56C1}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='193'>
    <window class='worksheet' maximized='true' name='Câu 1'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[sum:TotalCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy)].[none:TotalCases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D49A4F6-FC1D-4BD3-B25A-B65EF150C246}' />
    </window>
    <window class='worksheet' name='Câu 2'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='108'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalDeaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalDeaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91AE3585-F8D6-4728-91EA-1D4102542939}' />
    </window>
    <window class='worksheet' name='Câu 3'>
      <cards>
        <edge name='left'>
          <strip size='104'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:TotalRecovered:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalRecovered:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4379F07-E698-471F-A175-C04F4B96F312}' />
    </window>
    <window class='worksheet' name='Câu 4'>
      <cards>
        <edge name='left'>
          <strip size='120'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tot Cases/1M pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tot Cases/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tot Cases/1M pop:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5E44143-1926-4D84-988C-BD8A49235BA5}' />
    </window>
    <window class='worksheet' name='Câu 5'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='152'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Deaths/1M pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Deaths/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Deaths/1M pop:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BE6BE5B-9E2F-4845-83B7-F096E0A22C48}' />
    </window>
    <window class='worksheet' name='Câu 6'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tests/1M pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[sum:Tests/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Tests/1M pop:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{398119F6-5C56-47D3-8850-74DC95BAC9EE}' />
    </window>
    <window class='worksheet' name='Câu 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalCases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FCA325E-9EDB-4BA3-ACEA-270C9FDC772A}' />
    </window>
    <window class='worksheet' name='Câu 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57C871B7-9EE6-47DF-BBE6-75B68D46EBCA}' />
    </window>
    <window class='worksheet' name='Câu 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalRecovered:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD20B283-0240-4D62-8E05-7F2327FC199C}' />
    </window>
    <window class='worksheet' name='Câu 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Tot Cases/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2FC81EB-CF2F-46C1-A30F-CB616F35F302}' />
    </window>
    <window class='worksheet' name='Câu 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Deaths/1M pop:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[sum:Deaths/1M pop:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2565D819-0B36-401E-BA42-39AFBC17C552}' />
    </window>
    <window class='worksheet' name='Câu 12'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalTests:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalCases:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalCases:qk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 2)].[none:TotalTests:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A18F491-6567-4AD1-9DE7-FE38D18BEC52}' />
    </window>
    <window class='worksheet' name='Câu 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[usr:Calculation_698620929708941314:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[usr:Calculation_698620929708941314:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DABDAE2-4AA7-47D3-87B1-15E867B5ABEA}' />
    </window>
    <window class='worksheet' name='Câu 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:3:ok]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:AdhocCluster:4:ok]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50C33150-2E84-43BC-BA49-F3ABF327E1C5}' />
    </window>
    <window class='worksheet' name='Câu 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Calculation_925771236849373187:qk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Calculation_925771236849512453:qk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Calculation_925771236849958920:ok]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:TotalTests:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54073C58-1204-47A7-BC13-87E01900544A}' />
    </window>
    <window class='worksheet' name='Câu 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF7A23DE-935A-4BB5-8845-730ACB0A2C7D}' />
    </window>
    <window class='worksheet' name='Câu 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[:Measure Names]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy 2)].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7006AC2-AC0D-4646-8340-E6657A548643}' />
    </window>
    <window class='worksheet' name='Câu 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[sum:TotalDeaths:qk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[tdy:Datetime:ok]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFD23BE3-D765-44F4-9FA3-9753210227BC}' />
    </window>
    <window class='worksheet' name='Câu 19'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[:Measure Names]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A69C4044-E594-4A75-8A5B-6A8857EDC731}' />
    </window>
    <window class='worksheet' name='Câu 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[sum:TotalDeaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB15D558-D1C3-4537-AED8-6C5B0B4445BE}' />
    </window>
    <window class='worksheet' name='Câu 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E965E37-485B-4245-A53B-8E48A034125D}' />
    </window>
    <window class='worksheet' name='Câu 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Continent:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a (copy 3)].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{042B6525-3FB2-4CB5-8A9B-EB29773594FD}' />
    </window>
    <window class='worksheet' name='Câu 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Country,Other:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Country,Other:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22A7804D-2D35-42DA-84C9-9F20CE5C5260}' />
    </window>
    <window class='worksheet' name='Câu 24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[none:Continent:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A07C29BD-CB56-4949-A2C1-5B38DAFEAE2F}' />
    </window>
    <window class='worksheet' name='Câu 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Country,Other:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{656EDE18-21FA-4943-93BE-B27488CD4ADB}' />
    </window>
    <window class='worksheet' name='Câu 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[none:Continent:nk]</field>
            <field>[federated.0cz7bbx0a9ebz810h6k431j7jpbi (copy)].[yr:Datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E374C6F-D917-4A69-B2A9-EEE085B49362}' />
    </window>
    <window class='worksheet' name='Câu 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[sum:TotalDeaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E192DDF6-378D-42E9-8342-A1880AEA0D4E}' />
    </window>
    <window class='worksheet' name='Câu 28'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[:Measure Names]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[Country,Other (group)]</field>
            <field>[federated.0ayol351te15fe179y1pj0lgv20a].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{87EB80E4-A718-43C1-9500-A3AFACC059E8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Câu 1' width='192'>
      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
      h5r/HxRYhvvCGrMdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Câu 10' width='192'>
      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
      8RkItfm1PgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 14' width='192'>
      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
      52KWwf8PvT2i3wpf0WwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 15' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 16' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Câu 17' width='192'>
      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
      skJfyoIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 18' width='192'>
      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
      /x8rMnq2Anhp/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 19' width='192'>
      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
      jYYADHY0/x+4zSKu9lyy9gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 2' width='192'>
      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
      /x8yEQ3699wp5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 20' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 21' width='192'>
      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
      /w/7uG2z4eQ4IQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 22' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 23' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXAcWXrY+cus+65CVeG+DwIgCTbJ6Xv67umZHo08hzyWpbFkWWtba0n2
      KiZibYdjtTE7s157Jceu5ZBWK1nrsNeSLUvyasaau6dn+r6bNwiAJG4UUKj7vjPz7R9Fsg8C
      JKpQhYOsXwQCKFTmey8z35fvve99hySEELRocY8i73cDWrTYTxouAKqqNrrIFi2aRmsEaHFP
      0xKAFvc0+loOTsXDBIIhfB19JMMBDDYPdoPKZizD+ORRTHqpWe1s0aIpSLVogbRKkZnZWcw2
      ByZLG+VsDAXo73ITzerpbneiaRqS1BKEFoeDmkaAUkVjZKifufk1hGSmUqkgSZDL5tAZ/eh0
      OoCbv1u0OOjUJABCLbO2EWPy2HHS0SAG3yBWvUowmmGg09asNrZo0TRqmgLtBFVVWyNAi0ND
      SwvU4p6mJQAt7mlaAtDinqYlAC3uaVoC0OKepiUALe5pajOFiIUIBDcxmJ2kkzFkowWPRSKZ
      KTA8cQKX1dCsdrZo0RRqEgCnx4cxEsXjcZKIhZE0gSJMHB3vJJRIYze50TSNlo9Ni8NCTQIw
      P3OejGbGXsoj64wIVQG1yOyVJfqPTLVMIVocOmraCRZCQwiQJAkhxE2jNyEEslxdTrR2glsc
      JmoaASRJ5oah54ctPlvWny0OKy0tUIt7mpYAtLinaQlAi3ualgC0uKdpCUCLe5qaBEBTK6yu
      rlJRNTLJGOFYkkopTzAUbVb7WrRoKjXtA6STcYQoEwimyecz9A8Okwxv4LCZkJ3ddHqsrX2A
      FoeKmvYBzEY915ZD9HZ5WFjRCG8EMJrNtHndRNJFVKepZQrR4lBRkwBsBAIIoIIFsz6MZLTj
      sEhcWQxyZPIYOl11RtUaAVocFlpO8S3uaVpaoBb3NC0BaHFP0xKAFvc0LQFocU/TEoDbIIRo
      qXTvcloCsAVCCJRcgcCf/IjQd9/e7+a0aCI17QNkk1FW10N09Q9j15VYCefx2WTWo2nGx4+g
      P+TipBZKZGZXSJ2fR82XMHqdFNbCH/F+a3F3UdM+gKoo5NIRohmJciGJhoxegt4OJ7GihZ52
      B6qq3nSPPAxopQr5awFSFxYoJzLYjvThOjmKye8CJNb+/fdp/+xDmLra9rupLRqMVlZrGwEy
      iQixvEa3x8R0NE88maG/ux1FVZFkCUn64Ocgo5Uq5ObXSV1coBJLYx/twf/saUwdbSB/tO2+
      p08Re/k8PV95dp9a26JZRKbXaxOAcrlCKZcj7+rjgdOniCeSGCSVjWia0dEeJKnqH3zQRgAh
      BEJRyS1skLowTykYxzbSje+xE1h6/Ui67dtrG+km8uMzlCNJzB2tUeBuIR/LUs6W7l5TCCEE
      qBq5pSCp8/MUAxEsg5247hvBOtiJVIOQZmZXSF9apOdnn25ii1vsFZqqsfKTObofGqptBDgs
      KJk88//nn6OzmrEOdeE6NUbXlx5H1slQx/TMPt5H9OXzlKIpTD5XE1rcYi9JXAth63BidJjv
      TjWoWiyjM5vo/6XP0PPlJ7GP9iDrdXV1fgBJlmn75BSx1y42uKUt9ppytkhqLY53sqs6Xd/v
      BjUaIQSpc9fwPX0SU7unYeU6jg5QDESopHINK7PF3iKEIHRhDf+xHnSG6jT97hMAVSN9eRnn
      fSMNLVfW62j75HFir15o7Q4fUjLrSSRZxt71wTT2rhOA7NwqtqEuZGPjI1U7T4yQW9xAzRUb
      XnaL5qJWVCKX1+m4r+8javq7SgCEECTemcXz0GRT9iJkvQ7PQ5PE35xueNktmocQgujldTzD
      fgxW40e+qz0/wGYIh7uTYiZCUdXjsemIJbOMHZ3CZtxf9Wc5mkKoKuZOb9PqcJ8eZ+n3v0Xb
      Y1Poream1dOicRSTefKxLIMn+m75rsbo0IK1pauYXN3YdCXWImn0QqO/20M4LdHd4ULTtH3b
      CY58/11M3d6Gz/8/TvyNaURFxfvUfU2tp8XuEZpg/fV5fFPdmD23JnOvaQQILMxR0jtoM6rM
      zK0wduQIkY1V1oMh7O3D+5ofQC1VyC8F6fj0A8j65m5veB+cZPmPvoPvsSl0ZuOdT2ixb8Tn
      w5g9Vmw+55Yv5prWAL7OXpwWA8gGhvp7UVWV4dFRPO29tLv2dzqQmVnGNtqDbGp+miadxYTz
      2BDJ9680va4W9VMplEkuhvEf69l2VlKTAFjsDjo6OrDbbPg7OvC1udEbTHhczoY0eDck3p3F
      88DEntXnefgoyffn0BR1z+pssXNu6Px9k93ojNvPCO4KLVAxGEM26DHuoZmCzmrCPjFA8kxr
      FDiI5EJptIqKo/f2m6GHXgCEECTensHz0NE9XXxLkoT3sSkSb8+2RoEDhlZRCV8K0Hmq/459
      4tALgFaqkF/exDF+q4qr2ehsZqxDnaQvLe553S22RghB7Momzl4PRvud16WHXgBSFxZwHB9C
      0u+95kmSJHxP3FdVi7ZGgQNBOV0ku5mi7Ujnjo4/1AIgNI3UmSt7uvj9OAa3HXO3l8zsyr61
      oUUVIQSb51dpv6+3avq+Aw61ABTWIugdVgxu+762w/v4CWJvXEJo2r62414ntRLDYDVi9Tl2
      fE7tphDBEHZ3O+lYEL3Fhd2gEkvlGJ2cwm7a22lI4t2q3c9+Y/S5MLgdZK8FcIz373dz7kmU
      kkLsyiYDT43XpAypSQBcbe0kEwnQCnjaBylnouQrEpOj/YSjSSyd7j3LD6DmihSDMdo//yiK
      ojS9vjvheXyK8LffwjLSvd9NuScJXVjFM+oHnVRTf6hJAFbnZyjqHHS57KysBQEJk05lbT2I
      q3NkT00hUhcXcd03gsF0MEwRdN0+9DYzpdUItuGum/8XmkCtKOj3YIf6XiUXyaAUKniG22tW
      hdckAO09A2TzRQwmOyODfchGCwZZI1so43LsnSmEEILU+Xn6fun5PavzTkiShO+ZU4R/8B7W
      oc6bDyJ+LUTk8jquAS9GuxmDzYTRZkRvNSLrdEi6gx9G5iCjqRrhi2t03T9Y132sLUWS1Y7Z
      emPB+cGb1+XY27dwfimI0edC77Dsab13wtztA4lqBIq+dtSKQmoliv94D2aXlXKuRDGRIx2I
      o+TLaIoGQqC3GDHYjBhtJgzXf4x202238FtUiV8LYWt3YnZZ6zr/0N1hIQTxNy/jfWzqwL05
      JUnC9/QpIi+do+8XnmP97UW84124Bqr+Cbca41anSJV8mUquVBWQZJ7MeoJyroSmaMg6Gdmg
      o5TM0/PICLb2/be7OggIIcgGU6RXYww+U78i5NAJgJLOU0lmsAx07HdTtsQ62Enkx2dZf/ky
      Jq8bZ//tg2lJsoTRXn3jf1hAhBAgqkO8UqwQeHMeobV8kW8gNMHGu0s4ez3ViB91cuj2AZJn
      ruA6feTAvf1vIEkStqkRCrNLtE9tb4a7k3IkWUJn0GFymGkb66CYyDe4tYeXzHoCW7uD9vvq
      N4GppHOHSwA0RSU9vYT75Oh+N2Vbisk8mZSCLFTKsXTDyrV3OsluploRKQClVCE2G6Tz9MDN
      8Ca1IBSV2GsXWf133ztcApCbX8fS40N3QH1xlZLCxjuLdD84TPszp4i+fL5hHVZvMaIpKlrl
      3rY5EkIQvhig7UgHenNtqmUhBNmrayz9wX9DyRUZ+vUv1r4GKJVKmExG8tksssGMQQf5YgWH
      vb5V+E6pRnyYwf/M6abWUy+aqrHxziK+o92YXBZMjn4iPzmHkso1xFRDkiQsXjuFWBZ7l7sB
      LT6c5CMZlEIZ14Bvx+cIIajEM4S+/w5CE/T8zWcw+dwg3W4RLAQCPjKHzaVinJ1Z4OGTE1xd
      WEUIgc0kAYJSzxg+Z/PezJVEBrVQxtyz8wvfK4QQRKbXMbstOPuuL3p1VX+B6CsX6Pz8ow1Z
      s9g7XWQ3U/esAGiqRujCGj0PDSPJO7ufWrlC9NWLZGaWaf/0A9jHPxoXaFsBePPlHxJNFzj6
      iccZ7a12OpvLi88TRpJ1lEsF9CYLks5Mf3cboVQO1WZomilE7J0ZnKdGUTUNDpjRWXo1Rild
      oOvhoY9sw1uPDhB95TylRAa9c/cjpNFtIXJ5HaWiwMHUATSV2EwQe5cLndWwI3OHzOUl4i9d
      wHFimP5f+WkkvQ5V/egUclsBSGWyuN1tvP7i9/B++efw2I2kYiFCmyEcdjsGgwFZ1mHUa8xe
      W2H06ImmmUIIVSU3t0b7r34BXZMjPtRKIZ4jtRCl/4lxdIZb2+aYGCDw//6Q4V/74q4d9vU6
      PTqDHq2kYrSbdlXWYaOUKpAPpRl8ZvK2+RwAiptxQt97G53VRP/feR69y7btCLxtbzo2OcGF
      qwGee/6z2M3Vw1zeDp56qqp/7+39QP00UPPl1EZmZgXbSDe6A2ZPoxQrBN9bovvhEXSmrW+l
      bayHxPtzqMXy7iNWSGBtd5CPpDHa/bsr6xAhtKqdf8fJ/tt2fjVfIvKTsxTWwrR/+gGsw131
      u0QurG3w8CcmWVkNYtjH7HdCCOJvz9D28NG6w5s3A03VWH978bqZw/YmGbbhbryPTZE6f60h
      9VbVoY1Trx4GkstRjHYTVv/Wdv5C00ievcryH/4VRq+Tgb//09hGune07tq2Z/f4vbx/doaR
      8f3VuZcjSRCioaHOd4sQgvCFNax+O46eO7fL/cAEqXPzaJXdm22bnFbKmeI9sytcKZRJzIdo
      P957y3dqvkR+eZPlP/oO+aVNBn7lp2l75FhNO8PbToHW1lZRFIlwKEqHa/+cPG4Euz1IJJei
      KMUKHSd3dl/0FjP2I72kzs/v2n1T1ssYHSaKyTyWtq2si+4ehBCEzq/hO9p9yxRTqBqLv/8t
      EILen38Wc4+vLk3btiNAoZBHURXe+PH3Caf2Jxy4WiyTWwrimGz2KmPn5KNZkouRqvntDlVx
      SND26HESb880xG3S1uEiF0rtupyDTm4zhVC1LUfZ6mgq6P3Kp6qJDuucHm85Aggh+NzPfOXm
      5/2yu8nMLGMf621KrP96UAplgmeW6X10tGZTZb3LhqnDQ/bqGo6J3Qm0vcPJxntLeCfuvMg7
      rKgVldDFAP2Pj215jcmzV3GfHMOyy32hLUeA11/4Fn/8p3/BSy+9xOpmbFcV1IsQgsS7c7j3
      MeLDh9EUjcDbi3Sc6MNUh/OPJEn4njxJ7JWLux4F9BYjallFqAdrP6SRRG7G879V3atVFJLv
      X8Hz8NFd17OlADz89E/x+P1HiYQ2SGYKH1SsVlgLbIAQhDfWWAtGyKXiXFtYptFrsuJGFJ3Z
      gNG7//bv1bnoKvZOF7bO+ttjbHcjm40UVsO7ao8kS1h9dvKRzK7KOagUYlmKiTyeka1VvZnZ
      Faz9Hejtu3eI2nIcf++V7/HW9Cp9A4N4P2THUiwUiMSidHptXFsK0D88SmAjRIfPQTCaodtn
      ryalbsBOcOKdWdwPVBe/+20BmVgIo1ZUOsY7dt2etsemiL1+cdf+DNYOJ9lgClvn3ZW2VWjV
      oLbtJ/tAkm651zccorp+5vGG9IstBWDqwacYPFZ98yvlPFBdhFjtTiwmA5qq4PH3kE9G0GQ9
      JqORTEG9aQah7XKI10pl8ish2j/38K7L2i35SIbUcozex0cbItyWgXYiLxYpbMZ2pdq1+OxE
      Lq+jqupdtQ6IXw1h8dowuSxbPvv8YhC93YzB62xI39hSAK5eeJtz8yH0MnQOjdPf2wNU4wJl
      s1mSxU7MUh5hdeGxSCysx5mYGEd3XSuyW1OI1IVFXCeG0e8i4oNaUZD1um07xw2PK6FpCE18
      8CNu/K2RD2eIXwvR/+R4Q6NPeB87QfKNy3R/+cm6y9DpdOiN180ibHeHWUQ5VyKzFmfwmUnk
      bfpQ4s1pfE+fapi5zZYCMDJ5H4MnPXidFlZXl2/+3+Xt4AHv9aHb98Hbq629cbFwyrE0sdcu
      Mvgrf63uMir5Mgs/uITZbUXWyx/p2Nz8u7qxLMkSyDKyLIFc9cKq/siU0gWsfkfDO5h9vI/o
      T85SSecwOOvX5dvaneTDaYxDh98sQghB6Nwq7Sf6tt3IKoWTaMUKlt7GXe+WAhDcWCecvIa3
      s4+J0b3VwecWN1Ay+brtZoQQ1UgBHU58k93ozXq47l54w81QkqXq/+4wdahqa5qZbfIy7Z95
      oO4pjK3TSexKCPddIADptTiyXsbWsbWSQQhB7LULtD02hSQ3zjRny5Im73uABx94AFMpysuv
      vEY8W2pYhXfCff8447/5t9FZ6nvrplaqpsm9j4xiabNhsJowWIzoTQZ0Rn11WiTLO+p0kizv
      fLOrRlwnx8jMrqCVKnWXYXJVzSK0Q64OVUoVYnPBW3L4fuSYTJ5CINrwTdFtRenMmbe4srKO
      ze6mrYmmt5H1RRYDYRKbq7zwwgtsxLOoSpqzl+YBKGbj/OQnL5Ep3dmOJh/NkLgWqslhYr+Q
      DDpcJ0dJvjdXdxmyrmoWUUoV7nzwASZ8MUDbWAd6y/brrMRbM3genmz4c91WAJxGmYHRSTq7
      m5t4olzMEQiFWVi8itCZcVqNvHtmmngsBMCFizM8/Mj9XDh3/vbl5Epsnl2tmiYfgoBSkiTh
      eWiS5NlraOX6jeTsh9wsIhdO39HFUS2UyMyt4j451vD6txWAaDJNJpsgsrHW8Eo/QNDm9aEp
      FU499DSP3T/Cy999geX1MBemZyhXFIQkI+v0yGw/zGsVlY13Fmk/0VvXLu1+obeasQ13kZ6u
      P8OMtd1JLpTZ972Serjh4thxsv+2b/bU+XkcxwaakgF021dlT28/r7/2Os986ZcaXukHCK7O
      LyOXFbLZHFeuhXj+S5/DIEskU2nSiST3P3g/0xfnePihB7csQS0rrLxyhc5TA1h9+5snoB78
      n/oEy//22ziODaKrQ9VqsBkRQkMpVDBYD0ag4J0ghGDjnUX8R7sxObff0VULJRLvzjH0q59v
      Sju2zRT/4vf/EsxtOOxuHnrgJFB1ij8zs8ATjzxIOLDAUriE3w6pbIGhiRO4rQZUVd2zRNlC
      1Qi8tYCj14NrwHtoN4TCL7yH3mmrOv3UQeTyOgabCffgwQsYsBVCEySXIuRCaXoeGbntc4u+
      ehE0Dd9TJ5vSlm1HgKmpU8TSeTztHzgi2Fxe/J4wlWKWzWQJg6yiYuboeCehRBqHae/yAwBE
      p9fR24zYe923ODsfJpz3j7P+xz/CcXqsrkWexW8nsRDB3nvwo0UITZBcCBM+H6DnsdHbPjeh
      aiTPXKHv7362aTkgthWAixfPkS2W6Srp6LqefzcVC7G6uorT5cbjtLO0FsRpkpiZW2RwonlO
      8VuRXI5SyZbpfXSkoXrh/UDvcWDpa6dwZQ3n1HDN51u9DkLn1tDJugOr/RJCkI9kCF8KYHZb
      6X9qHFu787a5vFLT89hGujE57E2LgrG9U/zJh1i+cgm/74Nh1eXt4DOf/szNz339++Mplo9m
      iV8LMfDk+KHv/ABIEr4nTrD+5y/jODZY8zXdCLBbShcwu5sboKweSukC4YsBhBB03z+E6TY+
      1DcQqkbsjUv0fuVTTQ0Bs+WdPnvmPTq7enjk8cdJREPNq70OyrlS1SnlkcOh7twpBq8TvdNK
      fnmz5nMlSboZNOsgoRQrbJ5dYeO9JTyj7fQ9Nrajzg+QWwpi9Dgxenae8K4etuxBHqueb37z
      W0hahVOffK6pDagF9bq6s+Nk346SIB8mJEnC+8QJoi+dwzpUu6eXrcNJ8MwK3vHOfVcGaIpK
      Yj5MajWGZ7SjusO7w7SlcN2c5fVL+J9tfhjMLQVgaPIUQ5Onml55LQghCL6/jLO/DXvH3WUD
      fwNLXztaWaG0Gcfc5a3pXIPNhFpW0Crqvo2MQggygQSRmQ0cPR4Gnp7YMljYnShtxtEUFXMD
      jd62Y1uxfP/Nl3nt9TeJpXJNb8SdEEIQvbyB3qTHM9K+381pGpIkVXMOv3axrnMtbTYK8b1/
      XjcWuCsvz5ENJul/4gj+Y911dX6A2GsX9ywD0LYCIDSVXC5LKrO/AnDjrZKPZWm/jbHU3YJ9
      rJdyNEU5Ubu7416vA4QQlLNF1t9eJDobpOO+froeGMJgMdb9nCrJLKVIEvtYT4NbuzXbCoDf
      72dtYY7NBiZ5qIdiIk90doOeh0duqzK7W5B0Mp6HjhJ/Y7rmc2+ET9+TPM0lhfDFAIG3FnAN
      eOl7fAxL2/YxOHeCEIL4W5fxPDiJtEebqdv2qMDqIg89+9NMDHR95P+pVAoQREMbRBNpKsU8
      geDunLy3o1IoE3x/ie6HhtFvE3vzbsR5YpjctQBqoTYzdL3ZgKyTqeTLTWpZ1WE9eGaZ5Zfm
      MNiMDD4ziaPb3ZCRWStXyMyt4rpv76IRbisAimwiG19l7srVm//LpWJMX5lHU1Ukg4Xg2grz
      i0volQyb8cbmr9IU9Xrszd66U2AeVmSDHvf948Tfnqn5XKvf0bRoEUIIEgthssEUA09P0Dba
      0dBROfneHK6To8h1rh3qYcuayqUCPZ2dXJhb4qnnHrr5f5vLS5szjCTLpGMh2nv6ScfCuN0u
      IpkSqmpqjCmEgM0zK9g7nVja7U3bBj/IOE6PsfqH38b10CRyDVodS7uDxLVwU8wiisk8xVSB
      gWcnQEdDn4uoqCTev1o1e1D37nlveWc3VuZZWN1gYW6a7tET+K4PSalYiHg8zsbGBpF4Bq/e
      ht1q4OpSkLHJY+iuvw12YwqhlhWiMxvIsnRXRz67E0KnwzE5QO7yck3xRK0eG+FMEZ1u+4AA
      9aCpGtGL63SdHsBYp7fe7UhdXsE21IXJsbfxTrcUgFQ8wkogxJOf+TxjA503/+/ydvDJR6tO
      8T09HxjJdd0auLduUisxonObjH/x1D3b+aGq1mx79Dhrf/wC7lNjSDuMeCzrdRgcZkrJPGZP
      4zpTbC6I1e/A4m28ybnQNOJvTdPz5acaXvad2FIAeobGecLVtdVXTcc97MfW4dw24cS9hMFl
      w9zVRubKGs5jgzs+z97hJBtKN0wAiokc2c0UA082J0xlbjGIwWnDsA9RALdcwfg6epicnGRy
      cvIjkeF2hRAszl+hpGjk0zFW1kNoSpn3336DSLK61xAKLHJhbh6j03JPv/0/TNsnp4i/camm
      dZWt01WNrNwAdaimagTPrtB5agC5CYlSbpg9tO3RxtfH2TPFulrKMT0zTa6sEQ6FWFhZYvbM
      W2wkCzcvfGZ+BXM+SCh7eG37G42pw4NsNlFY2bmRnMF6PXiusrtoEUIIYnNB7B0uzJ7maOJK
      oQRaRcHSuz87/HsmADqzncGe6vqhf3AYvSyRTuV55NEHmT5fdXg3mkw47RaKlcMd5qORVM0j
      pgj+1ZsomZ2pmqs5hW3kY9ld1V1M5MlupvBONkcZUY31cxHv41P75sewZwJQTEe5thhgZmaW
      i2ffZX1lmaH7TnLuzbfoHxllMxShzapnLqLS7z4Y+QAOCganjeJGrCZT6d2aRWiKyua5FTpP
      DzRtB17J5CltxrGPNTfyyO3Y1ie4XvbSJ3g7hNCIrL6Oy38MnaH+ENrZxCJ6gwW7Z6SBrasd
      IQSRH5/F4LTieXBn6aLUssLqq1cZfHayrrd3+FIASSfjP9q4sJcfJ/SDdzG2OXZ8Tc2gJlWL
      Us5zZXGdY+MjLFy7gsHuxaFXWY+mmZgYZx+TSX6EYnaTsy/8Bjb3IAZT/abT2cQ8smxk4PhX
      6Bz+NLZ9ypUmSRLO40OEf/Au7gcmdtShdUY9kk5GyZcx1BjbtBDPkQunGXiqeclJ1EKJ7NwK
      Q7/+pabVsRNqEwBVQhIKxVwSvc1PORsnDAz3uAmGk/S0NyZk9W5Jx6/ROfJZjj/+NSS5fnVq
      qRBDrRSIB99n+vV/gVCLdAw+TfvA05jte2OteAOD30U5mUEplHYcH8fqt5MNpXAO7Ny3QKga
      wfeX6bx/AIFoTrABIYi9MY39+BBCluqqQwiNq+/8H1hdfXSN/BR6Y30q1Jp6h9liuRlRWVUU
      VFVDSFCpKMiytRp8VpKQ99FPVwiN1Zk/Y/yhr6LT7y5OjsVWdciwu/vpm/gS5UKM8OrLzLzx
      L9E0hfaBJ+kYeAazfW+8sGyDXRRWQjgmdjYS2TvdxK/tPHiuEILo7CbOPg8Wt61pvriFQITw
      D96l/+/+VN19RVNVImuv4cgdYXPxRQDsnmHc7Sdw+Y9jcXSh0995+luTAKRiIcqlMsk8GEQO
      m78Tm15lI5pmdMRRFY4dRF1uJtnEIpIk4/DcPt5MrUiShNnmp3/yb9A38WWK2SDhlVeYfu1r
      SJKejsFn6Bh8GqOlefGJHEcHSU8v4txhgFizuxo8FyF25GhfiOUoxLPXgw008RkKgX28D/tI
      T933KhE6h6fzNFNPfgOASilJNrFEMnyR+bP/N4XsJiazB6dvEnfHCZy+oxhNruv34YM677pF
      8PSrX6dj6Fn8fY/tUY2CfHqd0PKPCa+8jE5vpXP4OdoHnsJobqxBmlausPQHf8XQr31xx8mg
      A2/O453swnKHXWFNUVl5+QpdDww23fo29IN3MXe24TpZn9mzEBpnf/gbjD3wD3F6x7c5RlDI
      bpCOzJIMXyQdnUVR8thdg7jaT+BuP46jbay2EeCgU8yFySQWOPb4/7yHtUpYnb0MnfglBqd+
      kXw6wObiC5z94W9gtHjw9z2OzmCha+R5JGl3U0PZWE0aWNqM7zhJRHVXOH1HAYhMr+Ps9dw2
      TGEjEEKQuxbA+8SJustIR2eRZB2OtiPbHiNJElZHD1ZHD53Dn7qeFKVCJrFAKnyJlcv/hWxy
      8e4SgMCVb9J75Au77mj1IkkyNlc/I6f+HkP3/TK55BKL5/8dm0svYjS78fU+uus6HBMDZGZX
      di4A7U6CZ5bxTW5v25WPZikk8vQ/caTp09fSZhy901p3/gchBMvT/5mB41+pqa2SJCHpjLh8
      k7h8k/Qf/VmEpu7dRlizUSp5Iquv0jnymTsfvAfIsg5H2yhTT36Dhz//H5g/980076UAABse
      SURBVEeszf0lQuxOS2Yb6yE3v75jOx+D1YhaUtCUrTUtmqKyeXaFrk80b8Prw6Snl3AeH6pb
      0AqZAKV8mLbOT+y6LZKsu3sEYHPpR3h7HsVgPFgRomWdAZf/GPc//3vEN95j9q3fRlXrz7ij
      d1iRZJlKcmdmDpIsYfHZyUduPV4IQXh6HdeAF+MehJUXmkZ2bnVXWV6Wp/+U/sm/iSQ3Zp15
      VwiAEBqBub+kb/Kv73dTtkVvsHHi6f8Ns7Wdsy98lWKuPj9qSZKwj/eRvbLzvA1Vs4jkLf/P
      RzKUknnaxjr2RHNXjqXRWc3IdU5/ysUkyfAF/ANPNKxNd4UAxDfew+rsx2zbXfLpZiNJMkP3
      /TIDR3+Osz/6KsnIdF0my47J6jpgp+da/Q7y0Y9Gi1ArKuELa3SeHtgzQ7T0pcVdTX9WZ/6c
      3iNfRKdrXB6EugRALec5f+4cl2ausrZ0jfPnz5Mt7Y8JsxCClct/WvOiaL+QJIn2gSc48dQ/
      Z/aN3yI4/72ahcDoc6Gkc4jKznxnZb2MrNehFKoJ+YQQRKYDuAa8Tdf63EBoguzcKvaj9U1/
      lEqe0PJP6DlSf/rcrahbC1QuV9DLFYp6E5Oj/YSjSSyde5sfACCXWkapFLC5Rw+V87zZ3sep
      T/8ul1//BqnYHCOnfw1Z3rkVrGWwk/TVNew73BW2+O1kggmcA14K0SyFZB7v8e49u2eVWBoM
      OiSLsa46A1e+jb//aQT6hra5LgGolPKYbG60SgFVEaytB3F1juxpfoAqgsDcXzBw7OfQ6w+f
      CbVe7+bUp36bxXP/D5de+qdMPfF1jBbPnU8EXMeGSJ6fx318Z/kEnF1VswhXv5fIxQC9j45i
      MOzdPUteWcN1bBi9vvYupyolggvf5fSn/3Vd59+OuqZAZruXkf4OxicnGTtyBH/3AH7X3kdr
      LuXjpCMz+Psf3/O6G4Us6xk5/d/Tc+TznPnhPyIdu7KjEdQy2EkxEEbb4TTI7LFSShcInV/D
      PeTf0+jaQgiys6vYJ+uzpo2svorbfxyTpbaAwTuhvkWwJGF3urCajej0RlyO/VE9rl/7K7pG
      P4u8C4vPg4AkSXQOfYrjT3yN6de+QWjpxTueI+t1GP1uSqHEzuq4bgNTTOT3PMBwJZkFCQx1
      +JdXjRv/nP5jP9eElh1iLZCqFNlcepGesZ/e76Y0DEfbGPc///usX/sOV9/7PTTt9ooFx9FB
      MpeXd1y+bClh6zbtufthZmYZx+RAXUqK+Mb7mG3t2FzN8Ro7tAIQWn6Jtq77MZj2PpRGMzGa
      XZz61L9CCI0LP/mnlIvbuzXaR3vILdy6KyyEQKkUKGQ2iK2/y8rMnzHz5v/O4so/JhT5982+
      hFvIXF7BUUNYlxtUzR7+EwNTv0CzbLMP5dxBCMHa7H9l6sn/Zb+b0hRknZEjD/wjgvPf4+wP
      /weOP/E17J5bF7uyzYgwqCSWL1IWYbLJJfKpVQrZDTStgtHkxursw+YeomPwU/h6H2X+7B+S
      TS5hdw/tybUomTxCUTC4a091lE3MI4SyrcVnIziUApAMXcBk9WFxNDAk3QFDkiS6xz6HzT3I
      xZd/E3//43g6TlLIbJBNLpFLLVEuJNCsCtF32mg7cgqbe5D2/iewOLoxmBxs9dY0mdu49MrX
      ePBz/xadvvkL4fTMMvbJ2jfbhBAsXfyPDE79YlONGw+dAFSHxT9h6MQvHYqNr93i8h9j6smv
      8+Y3v0Ln0Kdwd5zA3/cYg1O/gMnqpxxJEfru2wyc/qkdlef0H6N3/IvMvPEvOf7E15rauYQQ
      pC8t0v2l2k0XCtkN8ukA3u6H7nzwLjh0AlDIBCgXk7j8x/e7KXuG3TPK03/rRxhMzls6rMnn
      Rs0VUYtldOY7mwhIkkTv+BdJhi4QuPJN+iZ+hmbNr9VcEa1UwdBW+/Rn9fKf0X/0Z5v+kqtL
      /IWmMDt9iZXAJmuLVzl/7hyZPTGFEFWV2OTfuCfe/jeQJAmj2b3l21rSyViHOsktrNdQnszk
      I/+Y9avfIRWpPQfBTsnMrWIf76/5WZULCRKhc3QMPdOkln1AXSNAKRcnnipQkVKYDTomxwYI
      RZNYm2wKUSmliAfPMHzqVw+V2UOzsY73kz57Fet4DapC2czEo/+My69/g1PP/ZtdhY/ZjvSl
      RXyfvr/mZ7U6+//ROfQ8Quia/pzrEgCDyY7VZkbSFIRSYWVtnbaeI003hQjMfp+ukecxmu6t
      jDF3wj7YSfg7b6GTpJpya7m8YwxN/SJzb/4LTj772w2zsQdQsgXUXBFrt6+mEUCtFAivvsQD
      n/2Dhps9bEVdUyCd0crR8VHGjowxdmSc7v4RfM7GJ034MJpaJrj4Q7rvoo2vRiHpdZg7PBTW
      Y7WdJ0l0Dj+H2d7J8qU/aejInb0WwDZWe9SHjYXv4+977LoWq/nULWImywdvYXsNhmg//M43
      MXh6Odbv4eLsVTr6TzA13sPrL71ApqLnueeeQYe4JV5MePU1XP7jmCxt9TZ5TxFCVJN7p9Nc
      Cm5wf38/Up2LTVXTeHtliceHR3GazVX/VrjZuSRJqu4Kzyxj7a/NzEGSZI48+Buc+f6v4/Qf
      w9t9f11t/DiZ6SV8z9SWbF1oKoG5v+T0p3+nIW3YCXuuBTKbDWSSKbyPfgJvYB27wwJaBb2z
      jSMWwbenr/Ldy+/y/OQx2qxWPBYrLouF8PSfMvHoP0MIcWAWwEII8pUK8VyOaC5LKJMhnEkT
      ymaIZrNUNJV8uUwsl+OtpUXqbbaqaVwMbvDilTn0Oh2yJGGQdXisFjwWK26rFSc61KUlxqND
      OM1mnGYzRp1+Z2EUdUamnvw65178Hzn96X+9a8citVCiksxi7qzNeC28+ipO/1GMTTB62449
      FoAK/vYBMleXePeNF1EMfobsJrL5EplYlCwwfnKYeG4Yn81OopBnJR4nFblMT6bIf33tHJo4
      i1lvwGww4DSb8ViseKzXfyxW3BYrVqORlXiMYZ8f8y7mkYFUEgkw6vREshlC2czNTp4qFsmX
      yxhkHW02Kz6bnQ6Hg4mOTp4YHcNns2PS65EliZKiYDEa61Y2VgWtjMVgRBMCVdMoKQrJQp5E
      Pk+ykCeez7Nq1rj89jvk9RLpYhFVaNV7pdfjNFuIZDP47HaOdXZhM5qwm0zYjEasRhMmvZOO
      4/8dF1/9Oqef+x10+vrbm70WwDrSjVSDk73QVFYu/ynHHvvNPX3B7XlgrFQiiiqZMFAhnsrg
      afOj00nIWpmiqsPj+qjFoBCCiy//T/RN/Ayezk+gaBpFpUKxopAuFkjk8ySud4REIU8yXyBT
      KnJhPUCfx4PNWP/aZC2ZwKTXM9nRid/uoMNR/Wm3O3FZzFgNRgx6fbMiCNZM7LWLIMt4P3m8
      ag90/V6VKgrpYpFXFq5h1OlwWSzkSiWy5TK5colcuUxZUSgrCv3Zl1GUEov2ZzEbqsJjNhiw
      GozYTEZKikIkm+XnT99Pp9OFxWBA/liHXftPP8L7xH1Y+3Y+HYtvnmX18p9x8tnfavRtuS17
      PgVyeXw3/3a4Pzyft7CVc14xt0khs4Gn8xNIkoRBp8Og0+Ewgd++tXmtEILleIwetxujrv5L
      jGQz6GUdHuvh0DrZx/vY/M7btD167JZ75bPbGfb57liGpn2Ocy98lS8c8eDoeuT6y6ZCvlIh
      VyqxGIsSzmT45sULhDJpFE2jz+1h2OtjyOtl0OWhFEli7qohIK8QrEz/Z4am/vZuLr8uDvxO
      8OrMX9A3+eWagyANee/8sO+E3743mohGYfS7UfNF1HwJva0+Ox9Z1jP11Dd4//u/xn3eUTo+
      FhL+/v6P+vSWVZXVRJylWJS3l5f445VXKTpLtL/4A4a8Poa9Pgba2uhwODFsMzPIJuZRKwVc
      7VN1tXk31C0AQlMpFCuYjDLZfBmXs/FOMZVSmtjGu4ye/vsNL/tuRJIkrENd5Bc3cE7tzFVy
      K4xmD5OP/BMuv/a/cvoz/wa9YfsR0KjTMerzM+rzI44I1tdewv7UOEWfg6V4lMVYjFcWrhHJ
      ZrEZjXS73Ay2tRHNZnn2yAQdTuf1SG8/vy/KjToFQBBYnmczreEyqciyRFmMNNwtMrjwQzoG
      ntxRmOsWVRxHB0i8O7srAQDwdJ6iffBprrzzOxz95D/bUecUFYXSZoyewW7cskSn08kjg9V2
      qJpGqlhgI5Xi8maQ78/OML0ZRFdJcCL9Pq/yOH2pi/S6PfS63bjMFgzXNV7NpK5FcDEd4c2z
      c6iaoL+ni8GeNsIp6L5uCtEISRZC5f3v/j1OPPOvMFl3P525VxAVhZU/+DYDv/6FHYVEv21Z
      QuXyq1/D2/MIXaOfu+PxuWsBsjMrdHzhk3c8VtE09LLMtfd/F8naS6ntYTbSadZTSQKpJJli
      EU0IOux2up2um4LR7XRhbqAzf10jgMnh46nHH2FpJYBRqjA7v8bo5FRDTSHCK2/i9I1jdexN
      1LK7BaHTYe7yUtmIYx3s3GVpeo4//pu8971/gMs/idO7fTRmgOzlFVwnR3dkwqCnOsWNb7zL
      w1/4dXQ6I/fduIbr7+SKqhJMpwkkEwRSSc5tBAimUmhCYDeZyZaK9HvaONLejt1ownZTrWvE
      pP9Ag2XU6bbtQwcyP4AQgjM/+IeMP/RVHG31xZC/l0ldXKAYiNDxUw83pLxM7CrTr/9z7n/+
      97Z1QdXKCkt/8N9qyl2wdPE/giQxNPWLO26LEIKSopAtlfj25Us39zKypRsq3RL5coXSde1V
      UVFQVBWDXo9Jr8ekq/62Go3YTaaDqQXKJuZBkrd0A2xxZ+xjvcReuYDQtF1PgwAc3iP0T36Z
      mTd/ixNPfmNLo7nCaghzt3fHnV+pFAgu/IAHPveHNbVFkqTq/oTBwC8/9MiOztE0jZKqUlYU
      SqpCSVHIl8tkS6WDJwBCqCxd+A/XtQKH1md/X5HNRmSzkUoii9HbmKAB3WN/jWR4mpWZP2Pw
      +Fdu+T51aRHX1E7TyQo25r+Dr/cRDMbmq5plWcYiy1i2WDscOAEIXPkWG/PfY/LRf7LfTTm0
      VI3jqgF0vY81RrcuSRITD32V977/D6gUk3h7HkRTy6hqGU0pEdp4k8rwJNFpDU0toV3/v6qW
      b35Wr/9WylniG+/xied/tyFt2w0HTgD8fY8z9eTX0e/Bm+FuxjHeT/Bbr9P2yeMNUyLoDBY6
      hz/NyuX/QqWcQaczIeuMVGJ5dF49kkFGp7Mgmz3V7/RG5OvH3DhW1puQkIiuv4O74747V9pk
      9mURrCoKmgC9vurxo9dXrRY1TUXTqv9vsTuEECz9X9+i/+88j97euH2UG7m25OshyoUQbH77
      TWyjPTiPDjasnr1iH0YAwZXps1y8vMKxYwMENmP4eye4//gQL/3oe+QKKk9/7gs4DC3V526Q
      JAnbSDe5xQ1cJ3Y6N99ZudKH4/MLyC8Gaf/Mgw2rYy+p0yleY3VpntWNENlkjKvzS6g7Hkck
      2to8lDWVTErl2c88i5qsxre0ur08PNVHKFWpp1ktPoZjcoDMzEpT6yiuRzD6XcjGAzeb3hF1
      m0L4O7tZmF8in9bR5XOwGcnQ7bcjhEDTbpcITiOwFsRukLG6TfzgOz9g4MhJgsEw5UySN4MK
      z33u1B3KaLETTN1eSqEEarmC1KRpZeriIs7jwzc94A4bdYvtytIi/SNjbAZWMBj0aAXt5k24
      /Y2QOPXwJzl1fY9m6vgHC6H29hsZHgWH8F4ePHQypk4P+dUw1qHd7grfilA1stcCeJ85dSg7
      P9QpAGqlSKmsEgmF8XkcLK4nmZgYR5ari6L9zBTf4qM4jw2Ru7KKY7Sn4WUXQgmMbQ4MdSa9
      OwjUJQB6k437Tn7w5m7zb5+EucX+Yh3uIvrSuab4UqcvLe7a6nS/aW213uXoLCZ0VhPlWLqh
      5QpNIze/jv1Ic+L27xUtAbjLkSQJ+8QA2dnGaoNK4SR6m6Vuz7ODQksA7gGcx6rq0EYuVNPT
      SziO702OgWbSEoB7AL3LjlZRUPOlhpQnhCB7dQ1HLbFIDygtAbgHkCQJ22gPuWuBhpRXjqbQ
      mYzoGmhisV/s6/ZdKLRJR0dVPx0PrZEsGxnuqy8qmRACVVVQKgpKpczG2iptPh96w51j5m9H
      OhFH1umwO+uPnFwqFsmkkrR3dSPLOmSdjCzL1b9lGfm6t9KdNDSKUkG3w0hvW+GYHCD6xiUc
      J4ZvCTtZC0IIkpcWcBwb3JVWabfXA6CqCrIs78psftcCsLm2RDiRZWzyGBbDzhuSCK3x4utn
      +Vt//QsITeXs5XlsehWb3UohGsTt9aJUKiiVCpVKBaVS/uBvpYJSURCahiY0xPWQ7LJOh15v
      QK/Xk0rEKReL6HfhP5pOJdHJMtl0/RqUcqlIJp2mVCxeN/bT0FQNoamoWrXtN/yoJUmC679v
      xv68/nciHsPd5q17j0VogoQxyfrLP8Zis9V9PaVikWw8hkffzuo7b9ZVhqYJErHIrq4HIJ1M
      YDSaMO8ibtOuBSBTUDgy1EUkkqK7w4kQgkqlgqZpNy/uhnnEhz9b3e30+OwoioJQKxhMZtx2
      ifX1TTKBq6SSfowmEwajEb3BgM5gwGKzYzAaMRiMSLKETqdHp9MhyfJNPfeNt5tSqSDrdDc/
      3zCtqOXzjTZXLVW1j2zybXVNW32WP9S2G58lSfrI95IkITQNRVVvRkEQQqCoyvXvBKGNAB6v
      D4PRePOtqaoqsiTfzL+lqtr1e1D9rKkaSB9c08LMJtJmDJu9XPfzNuTz6LUyY8+eAFlGE3e+
      BzpZB9IHnyUkoqEg3vYOuP7MJEkCAaqmbv/5Y9eciEYxGI3Y7I6b9+Dj13zL5489510LgKqU
      SSZTGGxd6HQ6VFXdkVN0cOUqy8tr9PRv4LDZsFIikDDwzJOjiPHBXb25gT2JLd9obnfF9vHJ
      XZffd3wS2aDH1O6pu4xKKks5ksLucu8q37DT7a773BvYHbv3dtu1P0CllCccz9LTVY0D2Qin
      +BYt9ooDGRWiRYu9oqUGbXFP0xKAFvc0LQFocU/TEoAW9zRN0RUeVu+gFvceTRGA3frzNkKT
      1IgyPrJDu89taV3PrTTiehouAI1QgX54R/ewl3GQ2tKIMj6+476fbWlIGY3eB2jR4jCxr4tg
      tZRl5trSlt9pSom52RkWVtZZW5pndu4aFfXWqZXQFC7PzG4ZRUJoKvNXZ7kyv0wmEeXy7ByF
      srplfSsLV0jnt7aRiW4GmJ6eJhKJMDs7y8yVhS2Pq2RjzC1tbPmdUsoxc3mGlfUQy/NXmJ65
      irZFm9VSjpmri1uWIa7fk/nlAOuri0zPXEHZqhAEV2cvU1K2nopurC5xaXqGbC7N9KWLRJPZ
      LY9LhddYC6dQ8kmmry5veUylmOXi5StbfneDy5enEUJw6fwFlK1aq5a5OjfLtaXVO5QBV2em
      yZVvLUUIjYWrs8xeXdjyvgJEAvOEUwUKyRBXloPAPptDhzfDKKUiJaXI5XPTmF1t6JUcZncH
      fZ0+RoYGuLq0TknJIfS2Led6megGhaJKQakwf/EiwmzHZRSoRgfD/d0MDQ8zMzvPtflNzFYn
      qqYBH5+maRSKJSqhMAk1RzpXwNvZQXAtzLH7pmhr76ZULIDeynCvn41tjENXN2JIQD6d4OrS
      CjaHl0omgqd7iE6vi+HBHpbWYyj5DOWyTAX4eDyFSChEpVSkrJaZPnMBs6sNg1bA5PTT1+Vn
      ZHiQKwsrlIWE3yYTSRfocn/UGlKoFTSlRCAYh1yIbKGEt72DeDLD5MQ4LrebcDTJxtoGgxPH
      CC4v4XPfmoehXCwTy0fRsqBVygTXlgmlCrQ5LHicVso6B3aTHr3u9pOIdDREKt1DOJJiIJNk
      bXkZu9uL2eamlE3S19fL8PAgs9e2d9tUc3HCqRzhYAhPVy+r1wLYXU6EZAU1T39/Py6Xk/XN
      JNu1pqhALhQkSwlVGFlbmt/fESAYCqEW02yE4rT5u5G0Mjqjjb7udoRSYG4xwPj4KAPDR/Ca
      BfHsrR5NK+thLPoSy6sb2N1+jDoNTTIy1N8NmsLc3DXGj05itlgZ6OskFI7eUkY2GiSWqxAK
      b6JJBkb624mnsvQMDGM2yATXltA72vF5rKxsROnfKgWo0IjFwiQjISLJPJ29AyjlPCabm06/
      B6WYZiEQY3ysDw0LHrtMaYsAeMFQCFHOEAjF8Pi6kUQF2WClr6cDoRa5Mr/GxMQEnX4XS4Ew
      JsOta674xgpJRU80HEA2WBjqdBJJFBkcGcGgA9lgxmvXU6goFAsFVG27RaSEWdbIqRIGWSIS
      jbAWWMdjMzK7FMJlN2Myme+YJ7m908/M9BX8HT5isQiVQpZkUSK2NodkciDUEnPXlpmYGN+2
      DIe3k8DMGTzdfWQSEfLFEhuxPMVkAFUyIoSGzdmGrBW3GRUBZPRSmYpsQAIikfB+jgCCkfGj
      OB12kqk4c5fnOXJ8ClPVchZF1ZCFytr6Jk4jZLEy7Pj4+1LQPzyGy+UilYpxZfoK/eOT2E2G
      qvmx0JAlWFlZY2RkmNVAiMHhLfxYTXYeuv80hUya9cAKgbjM2EAvQly/PZJEPLyB1WKmo6sb
      3RZWkELTmDh+EofVSGhjk9XlZcbHJ9EJpXo9igZqkfXNJF0dTrJlCcct5p+C4SNHcTrtpNMJ
      Ls9f5ciJKcw66eY9kVBZDQRxGgXdQ2N4rLfG5NE723moz0UmlWJ1eQFN187EsAf9dWHJJKIU
      dHaOTvSwurJC/+DWvr0Orx+nXkemoGGQVPIZM7a2Lkw2B1ZLDr0skYqFUCoVQrEkHd6tLTw7
      eoZweApYTCZkWaCpMh6/h8BijO52N1o5j4zG6to6I4O9W5bh7+jC7nBjt1rQAE2T8fj8RAPL
      tHf4AQhvBHC292Dcxkq1zedHljTKwgiaQtp0QBbBQmgoiobBsBt5FJTLCkbj7syoy+Vy1eZ+
      F2VoqoKGhH4XGjEhNCoVtSHXYzTW7xW3FYVcBr3ZhkFX/wRCUxVyhRIOe/3OOSBIp7M4nfWH
      0j8QAtCixX7RMoVocU/TEoAWdxGCVCJOvnDn8C+aWiGdzR28FEktWtRPiW/+5V/R1e5m6pEn
      CC4vMjQyjJCMKKUcHR3tBFcXKesdzL7yHYrdx1sC0OLuwu3r4L5RL5dmryGXIrz8WgK9XMFk
      svCZJwy8fWkNYzmBweLlySceaE2BWtxNSGTiIc4vJ+i1a6gmJ25nGxYlTs/IUTDYMIsMmtmB
      02ZDpqUFanG3o5Z58+0zPPDII2wVtqolAC3uaf5/bphb5kbt3/kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 24' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 25' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 26' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 27' width='192'>
      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
      0BUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 28' width='192'>
      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
      bo2wVSqQCPlZ2yqSyWVliaRrol9LJCmmyd0B2PucKQCO4+DxenBUDyHdy8PHK0zOTOBXeuyU
      i2RSUVki6Zro1xJJlmcw3hNnGrnm1Xn9jW88v/3Vl8fFwzA6lr2QwoS4CjINKlxNAiBcTQIg
      XE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFztbAFwbNaWl1jbLLBX
      3OLBgwccGTU++vAhjt3jD+9/cMFlCnE5znQ5tNkx2C7tk0iqmF14dX6arfI27WaLyl6ZnqJJ
      Q8w10a+GGHMAmmHgjAFQPR6isQQexcTsOexXKnh8OkNZjS9XiqRTIWmIuSakIeYMVI/OzMQI
      LUsjEfFT2qsxlkvRjdsMm0PyhhfXxpmjH4omCD37fWT4uAvMr2v48V5EXUJcCZkFEq4mARCu
      JgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuNtBLJA2KjdWn7NUMpqcm2NjK
      E46nmZsYYWPtKTvFMtOvvYl1kMfwRukd7lKuNnnr7W8TUE0++PQBb7zxDTaWn7CzV+PVhUk2
      tkpMzcySjZ9/FR1xPmfeAzi2SbFYpttusrq2iWX3KO7sgeNQKBQussa+azabmL02lhZgemwI
      s9sDYHJqlkQyRdTTo9Ls0ms3Wbhzl2QyQcCrAiqJWAjTVphfWCCbSWJ3WjiAbUuPxCA48x5g
      a22VimFSr+2TyyTJFwusPS6RiHl5+HSdW7duXWSdfWX0HKZHM+wXC5ian8WZcQDMTg3HF6Vx
      WKXZqHNYqZMNaiRzYygAmgePqgBQK28TzYwQ9jm8kU7z5XKJoWSkf4MSwBkD0Gsfkd+tYDRb
      6JO3CAaDVJpHpKNBltZ2yGZTN6ojbGFmgvxenfGhKEvreTYKGqZpMppOMnd7BI+ikMqNYHS6
      YNkkwyEKm+tEE0lqjS7mzg4jmThjoQhm1+DJWp5X78z2e1iAdIQpzpnfnQ7F4i66B/K7FWbm
      pjCOTCoHZaLRMMPDwwBYlnXmBpnf/Pw/ZJXIS5YdHuX1e9++8sfttFv87pe/uPLH/XPnOAlW
      nr/JE5njn8EMpDOxi6hLiCsh06DC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLV
      JADC1SQAwtUkAMLVJADC1c4WANti9ekSj5aWqZR3+PzzL2i269y//wTHMfno408vuEwhLsfZ
      LodWVCamJnm8tMr+ocPC3CT5cpHaQY3Dyj71rnmjGmJuMrc3xJwpAI5j8eTJKq/cucP68mOa
      jQaqx8twJsbD5W2yiYgskXRNyBJJZ+A44PMorG9sMDk1yXaxwsTELdpxh0ynidcrq8SI6+Fs
      a4RpHmZfufP89tRkEIBgEIJB38VUJsQVkFkg4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoS
      AOFqEgDhaucOgGV2KZX3cRyL2mEdcKhWqxdQmhCX79wBWF9dwerUKZS2+ejDR/TaDd7/+P5F
      1CbEpTt3ABzVQzaToddtkYz4WdkokslmLqI2IS7duQMQC+k8erJKKpVjeHyMdqdLNiErn4jr
      4dwXgmdHxsmOHC8ZFAvB8Gj63EUJcVXOsULM/++rjjDbtlHVs+1oup0ODtJNdpk0VcNzxv6N
      87y2juPQ7XbO9Gcv0qUF4CvneZLEYLsJr+2lV3/dnyCA9eVHfPLpA+qt7rMtNobR/pN7mOzv
      VQGH0vYWT1fWsftQ51W7jq9tYWOFTz/5lIMjA5CFsk9kanKc9sYRdvOAL1bKxBMRHj/a5O23
      X6ewXSCdG6a6XyeVDrN/2OLOnTmq5SL5nQojI0lK+3XGRzLkd4okE0nKe/uMTd4mGQ31e2iu
      c2tykkZrnbDW5cEXq/JJ8GmUKlUWFuYxmgZjY+P0Wg0s22KnuPvsHgqObePYNgfVKo29bQx8
      KHaPjZVV2paDadnoPg+NRrOvY3G78k6JqVcWZA9wIpqfXDpKyB/h6dM1Jqbn2MtvoHgj+PxB
      EokkXtWLomjkMhFWNwpEIhGs0XHCXpWW18fk1CRbm3lCoRDtZp1wSP717w+VbC5NPBrk6fLT
      yz8JFmKQySGQcDUJgHA1CYBwtf8FZqWZNQyqgN4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Câu 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 5' width='192'>
      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
      VCRJvBcnbll+QUAStz4f6U/+5E/+pOG32AFbH45BsZBnbXEOfFG8Tmlr5dtY4P3Pr5HPZWht
      a0cUtqffRKnXcDjdJl1Xa8zOzZFYXcfl8eF2ylv0amaZ9z69QjadItbegUPcmr6eW2FmrU5h
      fR5/UzuySU/wt59cJJVK0dzWadbza/z24y9JJtM0t5t1pbDOBx9/wfqGtb4yP82l6zfJZLJ0
      tLeZnt/q4gwXrk421NeXbvPllQkymYylvrEyS15xsLw4R2trK8K255dKzPLJxXFymQwd7e0m
      PbM6x0cXbpDLZmjfpuuqwvLyMtlcjkKpgt/v36Ibus7y7etkFDcbiXlibR1I9+ml7AZTMwtM
      3pyko7MHl/PrQxbukpi/xWqmhCiKeNwukz5/e4q5lTVKhTxNTU0mffbWJBNT06QzOdrbWrfo
      u7MQZhhUymUMyYnLYb6l7PbT39OB7HRbJq9XCty8eZOqLiFZNDqaqqDp0NLaRj6bNukOl5f+
      ni5klwurNsvhCUItD7IP2eKgBsnloS/eg8vpxOqgBMnppi/ei8spY9Uoik43vb19m4ZpcX+P
      N0BPRysut8dCBbcnQE9HGy6Pte7y+Il3tuFskN4XCFHOp3H7Atbp3QH6utqRG0eC90EAABCl
      SURBVKR3uv30dbcju8y/j6Fr+APW+QKIkoP44ChU87g8AdPvJ7u9+NwysiSRKxQt8wgEQ+Qz
      STZSGUs9FAyjlPPgsK4/Xl+QjvYW3B6vSdvxJPhRMHSNuiExdGDUpGlKjaom4nE78fl9lhVM
      lBw4JIm5mVuEjh3Hse0aQ6lQM2S8bhfN0cgWTddUSnXwuGW8viZrA6pX0Bxu+npaTS2CoWsU
      Kxpul4zH02xKbxg6xYqK2yXj9jSby2YYFMt1XE6Z5pYY8rYbKJUCyB5kuY7Hb66AarWA4XDj
      dNbwWupFdGlT9/itK4CmqptHpUjmn1utlVEFGZfLicdvrshavYKCjNvlxOsPmAxYcrohs0YN
      N0FBRTcw/YZavYYhCLicTlP+hqET6+hBREdsMKRa2cjg83kx6mWTVq+WKFRqdHR24/L6TXqt
      nMfp8VFTNSJ+s74rPYAgimTXl7h+Y5xybetKsSS7cAkKnlCMro52SwMAAcPQaevsRrIoseT2
      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
      qBj4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Câu 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 7' width='192'>
      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
      x5iA1AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Câu 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Câu 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
